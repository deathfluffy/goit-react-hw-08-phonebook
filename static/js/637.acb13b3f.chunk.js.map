{"version":3,"file":"static/js/637.acb13b3f.chunk.js","mappings":"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","sources":["pages/LoginPage.jsx"],"sourcesContent":["import Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useDispatch } from 'react-redux';\nimport {  useRef, useState } from 'react';\nimport { apiLoginUser } from '../../src/redux/auth/authSlice';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport React from 'react';\n\nfunction LoginPage() {\n  const defaultTheme = createTheme();\n  const dispatch = useDispatch();\n  const formRef = useRef(null);\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  \n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData(formRef.current);\n    const email = formData.get('email');\n    const password = formData.get('password');\n\n    if (!email || !email.trim()) {\n      setEmailError('Email is required');\n      return;\n    } else {\n      setEmailError('');\n    }\n\n  \n    if (!password || password.length < 7) {\n      setPasswordError('Password is required and should be at least 7 symbols long');\n      return;\n    } else {\n      setPasswordError('');\n    }\n\n    dispatch(apiLoginUser({ email, password })).then(response => {\n      if (response.error) {\n        if (response.payload.message === 'User already registered') {\n          toast.error('Failed to login. Your account is already registered.');\n        } else {\n          toast.error('Failed to login. Your account is already registered or entered incorrectly password and email');\n        }\n        console.clear();\n      }\n    });\n  };\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign In\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            ref={formRef}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              type=\"email\"\n              error={!!emailError}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              placeholder=\"example@gmail.com\"\n              helperText={emailError}\n            />\n           \n\n            <TextField\n              error={!!passwordError}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              placeholder=\"*******\"\n              inputProps={{ maxLength: 7 }}\n              helperText={passwordError || 'Please enter only 7 symbols'}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n\n            <Grid container>\n              <Grid item>\n                <Link href=\"./register\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default LoginPage;\n"],"names":["defaultTheme","createTheme","dispatch","useDispatch","formRef","useRef","_useState","useState","_useState2","_slicedToArray","emailError","setEmailError","_useState3","_useState4","passwordError","setPasswordError","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","e","formData","email","password","_context","prev","next","preventDefault","FormData","current","get","trim","abrupt","length","apiLoginUser","then","response","error","payload","message","toast","console","clear","stop","_x","apply","arguments","_jsx","ThemeProvider","theme","children","_jsxs","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlinedIcon","Typography","variant","onSubmit","ref","noValidate","mt","TextField","type","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","placeholder","helperText","inputProps","maxLength","Button","mb","Grid","container","item","Link","href"],"sourceRoot":""}