{"version":3,"file":"static/js/793.9e8eba4e.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","components/ContactFilter/ContactFilter.jsx","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/ConctactsPage.jsx","../node_modules/@mui/icons-material/AccountCircle.js","../node_modules/@mui/icons-material/LocalPhone.js","../node_modules/@mui/icons-material/Search.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? ( /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        }))) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from '../../redux/ContactFilter/ContactFilter';\nimport { selectFilter } from '../../redux/selectors';\nimport SearchIcon from '@mui/icons-material/Search';\nimport {\n  Avatar,\n  Box,\n  CssBaseline,\n  IconButton,\n  InputAdornment,\n  TextField,\n  Typography,\n  createTheme,\n} from '@mui/material';\nimport { ThemeProvider } from 'styled-components';\n\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\n\nexport default function ContactFilter() {\n  const defaultTheme = createTheme();\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    const value = event.target.value.toLowerCase();\n\n    dispatch(changeFilter(value));\n  };\n\n  return (\n    <ThemeProvider theme={defaultTheme} component=\"section\">\n      <CssBaseline />\n      <Box component=\"form\" noValidate sx={{ mt: 1 }} htmlFor=\"filter\">\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <AccountCircleIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Find contacts by name\n          </Typography>\n\n          <TextField\n            margin=\"normal\"\n            required\n            id=\"filter\"\n            autoFocus\n            type=\"text\"\n            name=\"filter\"\n            onChange={handleFilterChange}\n            value={filter}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton>\n                    <SearchIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Container,\n  CssBaseline,\n  TextField,\n  Tooltip,\n  Typography,\n  createTheme,\n} from '@mui/material';\nimport { ThemeProvider } from 'styled-components';\nimport { apiAddContact, apiGetContacts } from '../../redux/Contact/ContactsSlice';\nimport { toast } from 'react-toastify';\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\nimport { selectVisibleContacts } from '../../redux/selectors';\n\nexport default function ContactForm() {\n  const defaultTheme = createTheme();\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectVisibleContacts); \n\n  const [formData, setFormData] = useState({\n    name: '',\n    phone: '',\n  });\n\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    dispatch(apiGetContacts());\n  }, [dispatch]);\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n  \n    const { name, phone } = formData;\n  \n    if (!name.trim() || !phone.trim()) {\n      setError('Name and phone number are required');\n      return;\n    }\n  \n    if (contacts.some(({ name: contactName }) => contactName === name)) {\n      setError(`${name} is already in contacts`);\n      return;\n    }\n\n    if (contacts.some(({ number: contactNumber }) => contactNumber === phone)) {\n      setError(`${phone} is already in contacts`);\n      return;\n    }\n\n    const contactData = {\n      name,\n      number: phone,\n    };\n  \n    dispatch(apiAddContact(contactData))\n      .unwrap()\n      .then(() => {\n        toast.success('Contact was successfully added!');\n        setFormData({ name: '', phone: '' });\n        setError('');\n      })\n      .catch(error => {\n        toast.error('Failed to add contact: ' + error.message);\n      });\n  };\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LocalPhoneIcon  />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            PhoneBook\n          </Typography>\n          <form onSubmit={onSubmit} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Name\"\n              name=\"name\"\n              autoComplete=\"name\"\n              autoFocus\n              placeholder=\"Joe Doe\"\n              inputProps={{ maxLength: 20 }}\n              value={formData.name}\n              onChange={handleInputChange}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"phone\"\n              label=\"Number\"\n              type=\"tel\"\n              id=\"phone\"\n              autoComplete=\"phone\"\n              placeholder=\"+380983789924\"\n              inputProps={{ maxLength: 13 }}\n              value={formData.phone}\n              onChange={handleInputChange}\n            />\n            {error && (\n              <Typography variant=\"body2\" color=\"error\">{error}</Typography>\n            )}\n            <Tooltip title=\"Add Contact\">\n              <span>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  sx={{ mt: 3, mb: 2 }}\n                  disabled={!formData.name || !formData.phone}\n                >\n                  Add Contact\n                </Button>\n              </span>\n            </Tooltip>\n          </form>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__gxreB\",\"delButton\":\"ContactItem_delButton__CkB0T\"};","import css from './ContactItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { apiRemoveContact } from '../../redux/Contact/ContactsSlice';\n\nexport default function ContactItem({ contact }) {\n  const { id, name, number } = contact;\n  const dispatch = useDispatch();\n\n  const handleRemoveContact = () => {\n    dispatch(apiRemoveContact(id));\n  };\n\n  return (\n    <li className={css.item}>\n      <span>{name}:</span>\n      <span>{number}</span>\n      <button className={css.delButton} type=\"button\" onClick={handleRemoveContact}>\n        Delete\n      </button>\n    </li>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {selectVisibleContacts } from '../../redux/selectors';\nimport ContactItem from 'components/ContactItem/ContactItem';\n\nexport default function ContactList() {\n  const contacts = useSelector(selectVisibleContacts);\n\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center', flexDirection: 'column'}}>\n        {contacts.map(contact => (\n          <ContactItem key={contact.id} contact={contact} />\n        ))}     \n    </div>\n  );\n}","\nimport ContactFilter from 'components/ContactFilter/ContactFilter';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\n\n\nconst ContactsPage = () => {\n \n  return (\n    <div>\n      <ContactForm />\n      <ContactFilter />\n      <ul>\n        <ContactList />\n      </ul>\n    </div>\n  );\n};\nexport default ContactsPage;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 4c1.93 0 3.5 1.57 3.5 3.5S13.93 13 12 13s-3.5-1.57-3.5-3.5S10.07 6 12 6m0 14c-2.03 0-4.43-.82-6.14-2.88C7.55 15.8 9.68 15 12 15s4.45.8 6.14 2.12C16.43 19.18 14.03 20 12 20\"\n}), 'AccountCircle');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02z\"\n}), 'LocalPhone');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');"],"names":["getInputAdornmentUtilityClass","slot","generateUtilityClass","_span","generateUtilityClasses","_excluded","InputAdornmentRoot","styled","name","overridesResolver","props","styles","ownerState","root","concat","capitalize","position","disablePointerEvents","variant","_ref","theme","_extends","display","height","maxHeight","alignItems","whiteSpace","color","vars","palette","action","active","_defineProperty","inputAdornmentClasses","marginTop","marginRight","marginLeft","pointerEvents","React","inProps","ref","useThemeProps","children","className","_props$component","component","_props$disablePointer","_props$disableTypogra","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","hiddenLabel","size","classes","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","value","as","clsx","_jsxs","Typography","ContactFilter","defaultTheme","createTheme","filter","useSelector","selectFilter","dispatch","useDispatch","ThemeProvider","CssBaseline","Box","noValidate","sx","mt","htmlFor","flexDirection","Avatar","m","bgcolor","AccountCircleIcon","TextField","margin","required","id","autoFocus","type","onChange","event","target","toLowerCase","changeFilter","InputProps","endAdornment","InputAdornment","IconButton","SearchIcon","ContactForm","contacts","selectVisibleContacts","_useState","useState","phone","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","error","setError","useEffect","apiGetContacts","handleInputChange","_event$target","_objectSpread","Container","maxWidth","LocalPhoneIcon","onSubmit","evt","preventDefault","trim","some","_ref2","number","contactData","apiAddContact","unwrap","then","toast","catch","message","fullWidth","label","autoComplete","placeholder","inputProps","maxLength","Tooltip","title","Button","mb","disabled","ContactItem","contact","css","onClick","apiRemoveContact","ContactList","style","justifyContent","map","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}